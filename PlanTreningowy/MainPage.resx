<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>